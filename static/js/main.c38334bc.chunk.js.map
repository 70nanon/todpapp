{"version":3,"sources":["components/task.tsx","components/form.tsx","axios/axios.tsx","components/tasks.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Task","props","draggableId","id","index","provided","ListGroupItem","ref","innerRef","draggableProps","dragHandleProps","className","name","Button","onClick","deleteTask","icon","faTrashAlt","Form","useContext","TitleContext","title","updateTitle","ListGroup","InputGroup","FormControl","placeholder","type","value","onChange","e","target","updateTask","variant","url","apiKey","apiWriteKey","postData","axios","post","headers","then","res","data","catch","undefined","response","comment","patchData","current_url","join","patch","createContext","Tasks","useState","characters","updateCharacters","show","setShow","handleClose","handleShow","getTasks","a","get","params","contents","result","useEffect","handlePostTask","items","Array","from","length","newPost","displayOrder","push","postTask","hundleDeleteTask","delete","deleteData","newItems","filter","onDragEnd","splice","source","reorderedItem","destination","forEach","item","droppableId","droppableProps","map","openModal","thumb","Provider","Modal","onHide","Header","Title","Body","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAyCeA,MAlCf,SAAcC,GACZ,OACE,8BACE,cAAC,IAAD,CAA0BC,YAAaD,EAAME,GAAIC,MAAOH,EAAMG,MAA9D,SACG,SAACC,GAAD,OACC,cAACC,EAAA,EAAD,qCACEC,IAAKF,EAASG,UACVH,EAASI,gBACTJ,EAASK,iBAHf,IAIEC,UAAU,oBAJZ,SAME,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,mBAAf,SAAmCV,EAAMW,OACzC,qBAAKD,UAAU,QAAf,SAOE,cAACE,EAAA,EAAD,CACEC,QAAS,WAAOb,EAAMc,WAAWd,EAAME,KADzC,SAGE,cAAC,IAAD,CAAiBa,KAAMC,kBApBnBhB,EAAME,O,gBCyBbe,MA7Bf,SAAcjB,GAEZ,MAA+BkB,qBAAWC,GAAlCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAEf,OACE,cAACC,EAAA,EAAD,CAAWZ,UAAU,iBAArB,SACE,cAACL,EAAA,EAAD,CAAeK,UAAU,eAAzB,SACE,eAACa,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,YAAY,aACZ,aAAW,aACX,mBAAiB,eACjBC,KAAK,QACLC,MAAOP,EACPQ,SAAU,SAACC,GAAMR,EAAYQ,EAAEC,OAAOH,UAExC,cAACf,EAAA,EAAD,CACEC,QAAS,WAAOb,EAAM+B,cACtBC,QAAQ,oBACR9B,GAAG,gBAHL,yB,iBCpBJ+B,EAAM,2CACNC,EAAS,uCACTC,EAAc,uCAiBb,IAoBMC,EAAW,SAACjC,EAAciB,GAmBrC,OAjBeiB,IAAMC,KAAKL,EAAK,CAC7B,aAAgB9B,EAAQ,EACxB,MAASiB,GACR,CACDmB,QAAS,CACP,kBAAmBJ,KAGtBK,MAAK,SAACC,GACL,OAAOA,EAAIC,QAEZC,OAAM,SAACd,GACN,QAAmBe,IAAff,EAAEgB,SACJ,MAAO,CAAC,CAAE3C,GAAI,KAAMkB,MAAO,KAAM0B,QAAS,WAOnCC,EAAY,SAAC7C,EAAWC,GACnC,IAAM6C,EAAc,CAACf,EAAK/B,GAAI+C,KAAK,KAiBnC,OAhBeZ,IAAMa,MAAMF,EAAa,CACtC,aAAgB7C,EAAQ,GACvB,CACDoC,QAAS,CACP,kBAAmBJ,KAGtBK,MAAK,SAACC,GACL,OAAOA,EAAIC,QAEZC,OAAM,SAACd,GACN,QAAmBe,IAAff,EAAEgB,SACJ,MAAO,CAAC,CAAE3C,GAAI,KAAMkB,MAAO,KAAM0B,QAAS,WCxDnC3B,EAAegC,wBAAgC,IAiG7CC,MA/Ff,WACE,MAAuCC,mBAAqB,IAA5D,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA6BF,mBAAS,IAAtC,mBAAOjC,EAAP,KAAcC,EAAd,KACA,EAAwBgC,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,IAC5BE,EAAa,kBAAMF,GAAQ,IAE3BG,EAAQ,uCAAG,4BAAAC,EAAA,sEDTFxB,IAAMyB,IAAI7B,EAAK,CAC5BM,QAAS,CACP,YAAaL,EACb,eAAgB,oBAElB6B,OAAQ,CACN,OAAU,kBAGbvB,MAAK,SAAAC,GAAG,OAAKA,EAAIC,KAAKsB,YACtBrB,OAAM,SAACd,GACN,QAAmBe,IAAff,EAAEgB,SACJ,MAAO,CAAC,CAAE3C,GAAI,KAAMkB,MAAO,KAAM0B,QAAS,UCH7B,OACTmB,EADS,OAEfV,EAAiBU,GAFF,2CAAH,qDAKdC,qBAAU,WACRN,MACC,IAGH,IAWMO,EAAiB,WACrB,IAAMC,EAAQC,MAAMC,KAAKhB,IACX,uCAAG,8BAAAO,EAAA,sEACGzB,EAASgC,EAAMG,OAAS,EAAGnD,GAD9B,OACTqB,EADS,OAET+B,EAAmB,CAACtE,GAAIuC,EAAIvC,GAAIkB,MAAOA,EAAOqD,aAAcL,EAAMG,OAAS,GACjFH,EAAMM,KAAKF,GACXjB,EAAiBa,GAJF,2CAAH,qDAMdO,IAIIC,EAAmB,SAAC1E,GACxB,IAAMkE,EAAQC,MAAMC,KAAKhB,IDmBH,SAACpD,GACzB,IAAM8C,EAAc,CAACf,EAAK/B,GAAI+C,KAAK,KACpBZ,IAAMwC,OAAO7B,EAAa,CACvCT,QAAS,CACP,kBAAmBJ,KAGtBK,MAAK,SAACC,GACL,OAAOA,EAAIC,QAEZC,OAAM,SAACd,GACN,QAAmBe,IAAff,EAAEgB,SACJ,MAAO,CAAC,CAAE3C,GAAI,KAAMkB,MAAO,KAAM0B,QAAS,UC9B5CgC,CAAW5E,GACX,IAAM6E,EAAWX,EAAMY,QAAO,SAAAnD,GAAC,OAAIA,EAAE3B,KAAOA,KAC5CqD,EAAiBwB,IAGnB,OACE,sBAAKrE,UAAU,4BAAf,UACE,eAAC,IAAD,CAAiBuE,UAhCG,SAAChB,GAAiB,IAAD,EACjCG,EAAQC,MAAMC,KAAKhB,GACzB,EAAwBc,EAAMc,OAAOjB,EAAOkB,OAAOhF,MAAO,GAAnDiF,EAAP,oBACAhB,EAAMc,OAAN,UAAajB,EAAOoB,mBAApB,aAAa,EAAoBlF,MAAO,EAAGiF,GAC3ChB,EAAMkB,QAAN,uCAAc,WAAeC,EAAUpF,GAAzB,SAAA0D,EAAA,sEACNd,EAAUwC,EAAKrF,GAAIC,GADb,2CAAd,yDAGAoD,EAAiBa,IAyBf,UACE,cAAC,IAAD,CAAWoB,YAAY,qBAAvB,SACG,SAACpF,GAAD,OACC,6CACEM,UAAU,cACNN,EAASqF,gBAFf,IAGEnF,IAAKF,EAASG,SAHhB,SAKE,eAACe,EAAA,EAAD,kBACGgC,QADH,IACGA,OADH,EACGA,EAAYoC,KAAI,WAAuCvF,GAAW,IAA/CD,EAA8C,EAA9CA,GAAIkB,EAA0C,EAA1CA,MAAO0B,EAAmC,EAAnCA,QAAS2B,EAA0B,EAA1BA,aACtC,OACE,cAAC,EAAD,CACE3D,WAAY8D,EAAkBe,UAAWhC,EACzCzD,GAAIA,EAAIS,KAAMS,EAAOwE,MAAO9C,EAAS3C,MAAOA,EAAOsE,aAAcA,OAItErE,EAASqB,qBAKlB,cAACN,EAAa0E,SAAd,CAAuBlE,MAAO,CAACP,QAAOC,eAAtC,SACE,cAAC,EAAD,CAAMU,WAAYoC,SAGtB,eAAC2B,EAAA,EAAD,CAAOtC,KAAMA,EAAMuC,OAAQrC,EAA3B,UACE,cAACoC,EAAA,EAAME,OAAP,UACE,cAACF,EAAA,EAAMG,MAAP,0BAEF,eAACH,EAAA,EAAMI,KAAP,WACE,cAAC,EAAD,CAAMnE,WAAYoC,IADpB,cAEA,eAAC2B,EAAA,EAAMK,OAAP,WACE,cAACvF,EAAA,EAAD,CAAQoB,QAAQ,YAAYnB,QAAS6C,EAArC,mBAGA,cAAC9C,EAAA,EAAD,CAAQoB,QAAQ,UAAUnB,QAAS6C,EAAnC,4BC5FK0C,MAbf,WACE,OACE,qBAAK1F,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKA,UAAU,kBAAf,SACE,oBAAIA,UAAU,YAAd,yBAEF,cAAC,EAAD,UCGO2F,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB/D,MAAK,YAAkD,IAA/CgE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c38334bc.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { Button, ListGroupItem, Modal } from 'react-bootstrap';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Task(props: any) {\n  return (\n    <div>\n      <Draggable key={props.id} draggableId={props.id} index={props.index}>\n        {(provided) => (\n          <ListGroupItem\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className=\"my-2 py-2 rounded\"\n          >\n            <div className=\"row\">\n              <div className=\"col-10 text-left\">{props.name}</div>\n              <div className=\"col-2\">\n                {/* <Button \n                  className=\"mx-1\"\n                  onClick={props.openModal}\n                >\n                  <FontAwesomeIcon icon={faEdit} />\n                </Button> */}\n                <Button \n                  onClick={() => {props.deleteTask(props.id)}}\n                >\n                  <FontAwesomeIcon icon={faTrashAlt} />\n                </Button>\n              </div>\n            </div>\n          </ListGroupItem>\n        )}\n      </Draggable>\n    </div>\n  )\n}\n\nexport default Task;\n","import { useContext } from \"react\";\nimport \"../App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, ListGroup, InputGroup, FormControl, ListGroupItem } from 'react-bootstrap';\nimport { TitleContext } from \"./tasks\"\n\nfunction Form(props:any) {\n\n  const { title, updateTitle } = useContext(TitleContext);\n\n  return (\n    <ListGroup className=\"characters p-2\">\n      <ListGroupItem className=\"rounded mx-1\" >\n        <InputGroup>\n          <FormControl\n            placeholder=\"task title\"\n            aria-label=\"task title\"\n            aria-describedby=\"basic-addon2\"\n            type=\"title\"\n            value={title}\n            onChange={(e)=> {updateTitle(e.target.value)}}\n          />\n          <Button \n            onClick={() => {props.updateTask()}}\n            variant=\"outline-secondary\" \n            id=\"button-addon2\"\n          >\n            Add\n          </Button>\n        </InputGroup>\n      </ListGroupItem>\n    </ListGroup>\n  )\n}\n\nexport default Form\n","import axios from 'axios';\n\nconst url = \"https://todoapp.microcms.io/api/v1/tasks\";\nconst apiKey = \"f7c56759-963c-4bfe-971d-bccf2a334220\";\nconst apiWriteKey = \"77d88407-5a2c-42f0-bcff-9e40f60a1ba6\";\n\nexport function ApiGet() {\n  axios.get(url, {\n    headers: {\n      \"X-API-KEY\": apiKey\n    }\n  })\n  .then(res => (res.data.contents))\n  .catch((e) => {\n    if (e.response !== undefined) {\n      // e.response.dataはanyになる\n      return [{ id: null, title: null, comment: null}]\n    }\n  });\n}\n\nexport const fetchData = () => {\n  const result = axios.get(url, {\n    headers: {\n      \"X-API-KEY\": apiKey,\n      \"Content-Type\": \"application/json\" \n    },\n    params: {\n      \"orders\": \"displayOrder\"\n    }\n  })\n  .then(res => (res.data.contents))\n  .catch((e) => {\n    if (e.response !== undefined) {\n      return [{ id: null, title: null, comment: null}]\n    }\n  });\n\n  return result\n}\n\nexport const postData = (index:number, title:string) => {\n  // const current_url = [url, id].join('/');\n  const result = axios.post(url, {\n    \"displayOrder\": index + 1,\n    \"title\": title\n  }, {\n    headers: {\n      \"X-WRITE-API-KEY\": apiWriteKey\n    }\n  })\n  .then((res) => {\n    return res.data\n  })\n  .catch((e) => {\n    if (e.response !== undefined) {\n      return [{ id: null, title: null, comment: null}]\n    }\n  });\n\n  return result\n}\n\nexport const patchData = (id:string, index:number) => {\n  const current_url = [url, id].join('/');\n  const result = axios.patch(current_url, {\n    \"displayOrder\": index + 1\n  }, {\n    headers: {\n      \"X-WRITE-API-KEY\": apiWriteKey\n    }\n  })\n  .then((res) => {\n    return res.data\n  })\n  .catch((e) => {\n    if (e.response !== undefined) {\n      return [{ id: null, title: null, comment: null}]\n    }\n  });\n\n  return result\n}\n\nexport const deleteData = (id:string) => {\n  const current_url = [url, id].join('/');\n  const result = axios.delete(current_url, {\n    headers: {\n      \"X-WRITE-API-KEY\": apiWriteKey\n    }\n  })\n  .then((res) => {\n    return res.data\n  })\n  .catch((e) => {\n    if (e.response !== undefined) {\n      return [{ id: null, title: null, comment: null}]\n    }\n  });\n\n  return result\n}\n\nexport default ApiGet;\n","import { useState, useEffect, createContext } from \"react\";\nimport \"../App.css\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ListGroup, Modal, Button } from 'react-bootstrap';\nimport Task from \"./task\";\nimport Form from \"./form\";\nimport { fetchData, patchData, postData, deleteData } from '../axios/axios';\n\ntype postTask = {\n  id?: string;\n  title: string;\n  comment?: string;\n  displayOrder: number;\n}\n\nexport type TitleContextType = {\n  title: postTask[\"title\"],\n  updateTitle: React.Dispatch<React.SetStateAction<postTask[\"title\"]>>\n}\n\nexport const TitleContext = createContext<TitleContextType>({} as TitleContextType);\n\nfunction Tasks() {\n  const [characters, updateCharacters] = useState<postTask[]>([]);\n  const [title, updateTitle] = useState('')\n  const [show, setShow] = useState(false)\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const getTasks = async() => {\n    const result = await fetchData()\n    updateCharacters(result);\n  }\n  \n  useEffect(() => {\n    getTasks();\n  }, []);\n\n  // タスクの順番移動\n  const handleOnDragEnd = (result: any) => {\n    const items = Array.from(characters);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination?.index, 0, reorderedItem);\n    items.forEach(async function(item:any, index) {\n      await patchData(item.id, index)\n    })\n    updateCharacters(items);\n  }\n\n  // タスクの追加\n  const handlePostTask = () => {\n    const items = Array.from(characters);\n    const postTask = async() => {\n      const res = await postData(items.length + 1, title)\n      const newPost:postTask = {id: res.id, title: title, displayOrder: items.length + 1}\n      items.push(newPost)\n      updateCharacters(items);\n    }\n    postTask();\n  }\n\n  // タスクの削除\n  const hundleDeleteTask = (id:string) => {\n    const items = Array.from(characters);\n    deleteData(id);\n    const newItems = items.filter(e => e.id !== id);\n    updateCharacters(newItems);\n  } \n\n  return (\n    <div className=\"mainList row mx-auto mx-3\">\n      <DragDropContext onDragEnd={handleOnDragEnd}>\n        <Droppable droppableId=\"characters mx-auto\">\n          {(provided) => (\n            <div\n              className=\"characters\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              <ListGroup>\n                {characters?.map(({ id, title, comment, displayOrder }, index) => {\n                  return (\n                    <Task\n                      deleteTask={hundleDeleteTask} openModal={handleShow}\n                      id={id} name={title} thumb={comment} index={index} displayOrder={displayOrder}\n                    />\n                  );\n                })}\n                {provided.placeholder}\n              </ListGroup>\n            </div>\n          )}\n        </Droppable>\n        <TitleContext.Provider value={{title, updateTitle}}>\n          <Form updateTask={handlePostTask} />\n        </TitleContext.Provider>\n      </DragDropContext>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title>Task Edit</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form updateTask={handlePostTask} />        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Tasks;\n","import \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Tasks from \"./components/tasks\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"header row py-3\">\n          <h1 className=\"col title\">TODO List</h1>\n        </div>\n        <Tasks />\n      </header>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}