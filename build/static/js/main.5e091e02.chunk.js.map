{"version":3,"sources":["components/task.tsx","axios/axios.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Task","props","draggableId","id","index","provided","ListGroupItem","ref","innerRef","draggableProps","dragHandleProps","className","name","displayOrder","url","apiKey","fetchData","axios","get","headers","params","then","res","data","contents","catch","e","undefined","response","title","comment","patchData","current_url","join","patch","App","useState","characters","updateCharacters","getTasks","a","result","useEffect","Button","onClick","onDragEnd","items","Array","from","splice","source","reorderedItem","destination","forEach","item","droppableId","droppableProps","ListGroup","map","thumb","placeholder","InputGroup","FormControl","variant","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e091e02.chunk.js","sourcesContent":["import { Draggable } from \"react-beautiful-dnd\";\nimport { ListGroupItem } from 'react-bootstrap';\n\nfunction Task(props: any) {\n  return (\n    <Draggable key={props.id} draggableId={props.id} index={props.index}>\n      {(provided) => (\n        <ListGroupItem\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className=\"my-2 py-2 rounded\"\n        >\n          <div className=\"characters-thumb\">\n          </div>\n          <p className=\"m-0\">{props.name} | {props.displayOrder}</p>\n        </ListGroupItem>\n      )}\n    </Draggable>\n  )\n}\n\nexport default Task;\n","import axios from 'axios';\n\nconst url = \"https://todoapp.microcms.io/api/v1/tasks\";\nconst apiKey = \"f7c56759-963c-4bfe-971d-bccf2a334220\";\nconst apiWriteKey = \"77d88407-5a2c-42f0-bcff-9e40f60a1ba6\";\n\nexport function ApiGet() {\n  axios.get(url, {\n    headers: {\n      \"X-API-KEY\": apiKey\n    }\n  })\n  .then(res => (res.data.contents))\n  .catch((e) => {\n    if (e.response !== undefined) {\n      // e.response.data„ÅØany„Å´„Å™„Çã\n      return [{ id: null, title: null, comment: null}]\n    }\n  });\n}\n\nexport const fetchData = () => {\n  const result = axios.get(url, {\n    headers: {\n      \"X-API-KEY\": apiKey,\n      \"Content-Type\": \"application/json\" \n    },\n    params: {\n      \"orders\": \"displayOrder\"\n    }\n  })\n  .then(res => (res.data.contents))\n  .catch((e) => {\n    if (e.response !== undefined) {\n      return [{ id: null, title: null, comment: null}]\n    }\n  });\n\n  return result\n}\n\nexport const patchData = (id:string, index:number) => {\n  const current_url = [url, id].join('/');\n  const result = axios.patch(current_url, {\n    \"displayOrder\": index + 1\n  }, {\n    headers: {\n      \"X-WRITE-API-KEY\": apiWriteKey\n    }\n  })\n  .then((res) => {\n    return res.data\n  })\n  .catch((e) => {\n    if (e.response !== undefined) {\n      return [{ id: null, title: null, comment: null}]\n    }\n  });\n\n  return result\n}\n\nexport default ApiGet;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, ListGroup, InputGroup, FormControl, ListGroupItem } from 'react-bootstrap';\nimport Task from \"./components/task\";\nimport { fetchData, patchData } from './axios/axios';\n\nfunction App() {\n  const [characters, updateCharacters] = useState([]);\n\n  const getTasks = async() => {\n    const result = await fetchData()\n    updateCharacters(result);\n  }\n  \n  useEffect(() => {\n    getTasks();\n  }, []);\n\n  function handleOnDragEnd(result: any) {\n    const items = Array.from(characters);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination?.index, 0, reorderedItem);\n    items.forEach(async function(item:any, index) {\n      await patchData(item.id, index)\n    })\n    updateCharacters(items);\n  }\n  \n  function fetchDataOnClick() {\n    fetchData();\n    // „Åì„Åì„Å´axios„Åß„Çø„Çπ„ÇØ„ÅÆËøΩÂä†„ÇíAPI„Å´ÈÄÅ‰ø°„Åô„ÇãÂá¶ÁêÜ„ÇíÊõ∏„Åè\n  }\n  // function handleDeleteTask(result: any) {\n  //   const items = Array.from(characters);\n  //   const [reorderedItem] = items.splice(result.source.index, 1);\n  //   items.splice(result.destination.index, 0, reorderedItem);\n\n  //   updateCharacters(items);\n\n  //   // „Åì„Åì„Å´axios„Åß„Çø„Çπ„ÇØ„ÅÆÂâäÈô§„ÇíAPI„Å´ÈÄÅ‰ø°„Åô„ÇãÂá¶ÁêÜ„ÇíÊõ∏„Åè\n  // }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"header row py-3\">\n          <h1 className=\"col\">TODO„É™„Çπ„Éà</h1>\n          <div className=\"col\">\n            <Button onClick={getTasks}>Êõ¥Êñ∞üîÅ</Button>\n          </div>\n        </div>\n        <div className=\"row mx-3\">\n          <DragDropContext onDragEnd={handleOnDragEnd}>\n            <Droppable droppableId=\"characters\">\n              {(provided) => (\n                <div\n                  className=\"characters\"\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  <ListGroup>\n                    {characters?.map(({ id, title, comment, displayOrder }, index) => {\n                      return (\n                        <Task id={id} name={title} thumb={comment} index={index} displayOrder={displayOrder} />\n                      );\n                    })}\n                    {provided.placeholder}\n                  </ListGroup>\n                </div>\n              )}\n            </Droppable>\n            <ListGroup className=\"characters p-2\">\n              <ListGroupItem className=\"rounded mx-1\" >\n                <InputGroup>\n                  <FormControl\n                    placeholder=\"Recipient's username\"\n                    aria-label=\"Recipient's username\"\n                    aria-describedby=\"basic-addon2\"\n                  />\n                  <Button variant=\"outline-secondary\" id=\"button-addon2\">\n                    Add\n                  </Button>\n                </InputGroup>\n              </ListGroupItem>\n            </ListGroup>\n          </DragDropContext>\n        </div>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}