{"version":3,"sources":["components/task.tsx","axios/axios.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Task","props","draggableId","id","index","provided","ListGroupItem","ref","innerRef","draggableProps","dragHandleProps","className","name","Button","onClick","deleteTask","url","apiKey","apiWriteKey","postData","title","axios","post","headers","then","res","data","catch","e","undefined","response","comment","patchData","current_url","join","patch","App","useState","characters","updateCharacters","updateTitle","getTasks","a","get","params","contents","result","useEffect","hundleDeleteTask","items","Array","from","delete","deleteData","newItems","filter","onDragEnd","splice","source","reorderedItem","destination","forEach","item","droppableId","droppableProps","ListGroup","map","displayOrder","thumb","placeholder","InputGroup","FormControl","type","value","onChange","target","length","newPost","push","postTask","variant","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cc10a87.chunk.js","sourcesContent":["import { Draggable } from \"react-beautiful-dnd\";\nimport { Button, ListGroupItem } from 'react-bootstrap';\n\nfunction Task(props: any) {\n  return (\n    <Draggable key={props.id} draggableId={props.id} index={props.index}>\n      {(provided) => (\n        <ListGroupItem\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          className=\"my-2 py-2 rounded\"\n        >\n          <div className=\"row\">\n            <div className=\"col-4\"></div>\n            <div className=\"col-4\">{props.name}</div>\n            <div className=\"col-4\">\n              <Button \n                onClick={() => {props.deleteTask(props.id)}}\n              >\n                delete\n              </Button>\n            </div>\n          </div>\n        </ListGroupItem>\n      )}\n    </Draggable>\n  )\n}\n\nexport default Task;\n","import axios from 'axios';\n\nconst url = \"https://todoapp.microcms.io/api/v1/tasks\";\nconst apiKey = \"f7c56759-963c-4bfe-971d-bccf2a334220\";\nconst apiWriteKey = \"77d88407-5a2c-42f0-bcff-9e40f60a1ba6\";\n\nexport function ApiGet() {\n  axios.get(url, {\n    headers: {\n      \"X-API-KEY\": apiKey\n    }\n  })\n  .then(res => (res.data.contents))\n  .catch((e) => {\n    if (e.response !== undefined) {\n      // e.response.dataはanyになる\n      return [{ id: null, title: null, comment: null}]\n    }\n  });\n}\n\nexport const fetchData = () => {\n  const result = axios.get(url, {\n    headers: {\n      \"X-API-KEY\": apiKey,\n      \"Content-Type\": \"application/json\" \n    },\n    params: {\n      \"orders\": \"displayOrder\"\n    }\n  })\n  .then(res => (res.data.contents))\n  .catch((e) => {\n    if (e.response !== undefined) {\n      return [{ id: null, title: null, comment: null}]\n    }\n  });\n\n  return result\n}\n\nexport const postData = (index:number, title:string) => {\n  // const current_url = [url, id].join('/');\n  const result = axios.post(url, {\n    \"displayOrder\": index + 1,\n    \"title\": title\n  }, {\n    headers: {\n      \"X-WRITE-API-KEY\": apiWriteKey\n    }\n  })\n  .then((res) => {\n    return res.data\n  })\n  .catch((e) => {\n    if (e.response !== undefined) {\n      return [{ id: null, title: null, comment: null}]\n    }\n  });\n\n  return result\n}\n\nexport const patchData = (id:string, index:number) => {\n  const current_url = [url, id].join('/');\n  const result = axios.patch(current_url, {\n    \"displayOrder\": index + 1\n  }, {\n    headers: {\n      \"X-WRITE-API-KEY\": apiWriteKey\n    }\n  })\n  .then((res) => {\n    return res.data\n  })\n  .catch((e) => {\n    if (e.response !== undefined) {\n      return [{ id: null, title: null, comment: null}]\n    }\n  });\n\n  return result\n}\n\nexport const deleteData = (id:string) => {\n  const current_url = [url, id].join('/');\n  const result = axios.delete(current_url, {\n    headers: {\n      \"X-WRITE-API-KEY\": apiWriteKey\n    }\n  })\n  .then((res) => {\n    return res.data\n  })\n  .catch((e) => {\n    if (e.response !== undefined) {\n      return [{ id: null, title: null, comment: null}]\n    }\n  });\n\n  return result\n}\n\nexport default ApiGet;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, ListGroup, InputGroup, FormControl, ListGroupItem } from 'react-bootstrap';\nimport Task from \"./components/task\";\nimport { fetchData, patchData, postData, deleteData } from './axios/axios';\n\ntype postTask = {\n  id?: string;\n  title: string;\n  comment?: string;\n  displayOrder: number;\n}\n\nfunction App() {\n  const [characters, updateCharacters] = useState<postTask[]>([]);\n  const [title, updateTitle] = useState('')\n\n  const getTasks = async() => {\n    const result = await fetchData()\n    updateCharacters(result);\n  }\n  \n  useEffect(() => {\n    getTasks();\n  }, []);\n\n  // タスクの順番移動\n  const handleOnDragEnd = (result: any) => {\n    const items = Array.from(characters);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination?.index, 0, reorderedItem);\n    items.forEach(async function(item:any, index) {\n      await patchData(item.id, index)\n    })\n    updateCharacters(items);\n  }\n\n  // タスクの追加\n  const handlePostTask = () => {\n    const items = Array.from(characters);\n    const postTask = async() => {\n      const res = await postData(items.length + 1, title)\n      const newPost:postTask = {id: res.id, title: title, displayOrder: items.length + 1}\n      items.push(newPost)\n      updateCharacters(items);\n    }\n    postTask();\n  }\n\n  // タスクの削除\n  const hundleDeleteTask = (id:string) => {\n    const items = Array.from(characters);\n    deleteData(id);\n    const newItems = items.filter(e => e.id !== id);\n    updateCharacters(newItems);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"header row py-3\">\n          <h1 className=\"col\">TODO List</h1>\n          <div className=\"col\">\n            <Button onClick={getTasks}>reload</Button>\n          </div>\n        </div>\n        <div className=\"mainList row mx-auto mx-3\">\n          <DragDropContext onDragEnd={handleOnDragEnd}>\n            <Droppable droppableId=\"characters mx-auto\">\n              {(provided) => (\n                <div\n                  className=\"characters\"\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  <ListGroup>\n                    {characters?.map(({ id, title, comment, displayOrder }, index) => {\n                      return (\n                        <Task deleteTask={hundleDeleteTask} id={id} name={title} thumb={comment} index={index} displayOrder={displayOrder} />\n                      );\n                    })}\n                    {provided.placeholder}\n                  </ListGroup>\n                </div>\n              )}\n            </Droppable>\n            <ListGroup className=\"characters p-2\">\n              <ListGroupItem className=\"rounded mx-1\" >\n                <InputGroup>\n                  <FormControl\n                    placeholder=\"task title\"\n                    aria-label=\"task title\"\n                    aria-describedby=\"basic-addon2\"\n                    type=\"title\"\n                    value={title}\n                    onChange={(e)=> {updateTitle(e.target.value)}}\n                  />\n                  <Button onClick={handlePostTask} variant=\"outline-secondary\" id=\"button-addon2\"> Add </Button>\n                </InputGroup>\n              </ListGroupItem>\n            </ListGroup>\n          </DragDropContext>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}